---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { client, getBlog } from "@utils/sanity.ts";

import { useSanityClient } from 'astro-sanity';


export async function getStaticPaths() {
  console.log("Starting getStaticPaths");
  const posts = await client.fetch(`*[_type == "blog"]{
    _id,
    slug,
    name,
    PublicationDate,
    ContentBody,
    Summary,
    FurtherReading,
    "comments": *[_type == "comment" && post._ref == ^._id && approved == true]{
      _id,
      name,
      email,
      comment,
      _createdAt
    }
  }`);
  
  console.log("Fetched posts:", posts);

  const paths = posts.map((post) => {
    console.log("Processing post:", post._id);
    return {
      params: { slug: post.slug.current },
      props: {
        _id: post._id,
        name: post.name,
        PublicationDate: post.PublicationDate,
        ContentBody: post.ContentBody,
        Summary: post.Summary,
        FurtherReading: post.FurtherReading,
        slug: post.slug.current,
        comments: post.comments
      }
    };
  });

  console.log("Returning paths:", paths);
  return paths;
}

getStaticPaths()

export const prerender = true;
console.log("Props in component:", Astro.props);
const { name, _id, PublicationDate, ContentBody, Summary, FurtherReading, slug, comments } = Astro.props;
console.log("Destructured props:", { name, _id, PublicationDate, ContentBody, Summary, FurtherReading, slug });
// Format the date
const formattedDate = new Date(PublicationDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

function renderPortableText(blocks) {
  if (!blocks || !Array.isArray(blocks)) return '';
  return blocks.map(block => {
    if (block._type === 'block' && block.children) {
      return block.children.map(child => child.text).join('');
    }
    // Handle other block types as needed
    return '';
  }).join('\n\n');
}
function isValidContent(content) {
  return Array.isArray(content) && content.length > 0;
}

---

<Layout title={name || 'Blog Post'}>
  <Container>
    <div class="mx-auto max-w-3xl mt-14">
      <h1 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {name || 'Loading...'}
      </h1>
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          Sapna Deb
        </span>
        <span class="text-gray-400">•</span>
        <time class="text-gray-400" datetime={formattedDate}>
          {formattedDate}
        </time>
        <span class="text-gray-400 hidden md:block"></span>
      </div>
    </div>

    {isValidContent(ContentBody) ? (
      <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
        {ContentBody.map((block, index) => (
          <p key={index} set:html={renderPortableText([block])} />
        ))}
      </div>
    ) : (
      <p class="mx-auto prose prose-lg mt-6 max-w-3xl">No content available</p>
    )}

    {isValidContent(Summary) && (
      <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
        <h2>Summary</h2>
        {Summary.map((block, index) => (
          <p key={index} set:html={renderPortableText([block])} />
        ))}
      </div>
    )}

    {isValidContent(FurtherReading) && (
      <div class="text-gray-400 mx-auto prose prose-lg mt-6 max-w-3xl">
        <h2>Further Reading</h2>
        {FurtherReading.map((block, index) => (
          <p key={index} set:html={renderPortableText([block])} />
        ))}
      </div>
    )}

    <div class="text-center mt-8">
      <a
        href="/blog"
        class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition">
        ← Back to Blog
      </a>
    </div>
    
    <!-- Comment submission form -->
    <div class="comment-form-container mx-auto max-w-3xl mt-8 p-6 bg-white rounded-md shadow-md">
      <h2 class="text-2xl font-semibold mb-4">Submit a Comment</h2>
      <form method="POST" action={`/api/submitComment?postId=${_id}`} enctype="application/x-www-form-urlencoded">
        <input 
          type="text" 
          name="name" 
          placeholder="Your name" 
          required 
          class="w-full p-3 mb-4 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" 
        />
        <input 
          type="email" 
          name="email" 
          placeholder="Your email" 
          required 
          class="w-full p-3 mb-4 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" 
        />
        <textarea 
          name="comment" 
          placeholder="Your comment" 
          required 
          class="w-full p-3 mb-4 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" 
          rows="5"></textarea>
          <script>
            document.getElementById('submitCommentButton').onclick = function() {
                alert("Comment submitted, will be reviewed and approved");
            };
        </script>
        <button 
          type="submit" 
           id="submitCommentButton"
          class="w-full p-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition">
          Submit Comment
        </button>
            <!-- Comments section -->
    <div class="comments-section mx-auto max-w-3xl mt-8">
      <h2 class="text-2xl font-semibold mb-4">Comments</h2>
      {comments && comments.length > 0 ? (
        comments.map(comment => (
          <div key={comment._id} class="comment mb-4 p-4 bg-gray-100 rounded-md">
            <p><strong>{comment.name}</strong> <span class="text-gray-400">on {new Date(comment._createdAt).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}</span></p>
            <p>{comment.comment}</p>
          </div>
        ))
      ) : (
        <p>No comments yet.</p>
      )}
    </div>

      </form>
    </div>
  </Container>
</Layout>



<!-- 

<form method="POST" action={`/api/submitcomment`}>
  <input type="text" name="name" placeholder="Your name" required />
  <input type="email" name="email" placeholder="Your email" required />
  <textarea name="comment" placeholder="Your comment" required></textarea>
  <button type="submit">Submit Comment</button>
</form> -->
