---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { client, getBlog } from "@utils/sanity.ts";

import { useSanityClient } from 'astro-sanity';

export async function load( SLUG ) {

  // Fetch the blog post data
  const postResponse = await client.fetch(`*[_type == "blog"][0]`, { slug: SLUG });
  // Fetch comments associated with the post
  const commentsData = await client.fetch(`*[_type == "comment"]`, {post: postResponse?._id});
  console.log(commentsData, "COMMENT");

  return {
    props: {
      commentsData // Processed comments with plain text
    },
  };
}

export async function getStaticPaths() {
  const posts = await useSanityClient().fetch(`*[_type == "blog"]`);
  
  console.log("Fetched blog specific slug")
  return posts.map((post) => {
    const getText = (blocks) => {
      return blocks.map(block => block.children.map(child => child.text).join('')).join('');
    };
    load(post.slug?.current)
    console.log("Current Slug:",post.slug?.current)

    return {
      params: {
        slug: post.slug?.current || '',
      },
      props: {
        ...post,
        ContentBody: getText(post.ContentBody),
        Summary: getText(post.Summary),
        FurtherReading: getText(post.FurtherReading),
      },
    };
  });
}

// Usage in a component
//const { name, PublicationDate, ContentBody, Summary, FurtherReading } = Astro.props;
let { name, PublicationDate, ContentBody, Summary, FurtherReading, comments=[], slug } = Astro.props;

const truncateddate = PublicationDate.substring(0,10)

---

<Layout title={name}>
  <Container>
    <div class="mx-auto max-w-3xl mt-14">
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {name}
      </h1>
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          Sapna Deb
        </span>
        <span class="text-gray-400">•</span>
        <time
          class="text-gray-400"
          datetime={truncateddate}>
          {truncateddate}
        </time>
        <span class="text-gray-400 hidden md:block"></span>
      </div>
    </div>

    <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
      {ContentBody}
    </div>
    <div class="text-gray-400 mx-auto prose prose-lg mt-6 max-w-3xl">
      {FurtherReading}
    </div>
    <div class="text-center mt-8">
      <a
        href="/blog"
        class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition"
        >← Back to Blog</a
      >
    </div>
    <div>
      <h3>Comments:</h3>
      <ul>
        {comments.map(comment => (
          <li key={comment._id}>{comment.name}: {comment.comment}</li>
        ))}
      </ul>
    </div>
    <!-- Comment submission form -->
    <form method="POST" action={`/pages/comments/${slug}`}>
      <input type="text" name="name" placeholder="Your name" required />
      <input type="email" name="email" placeholder="Your email" required />
      <textarea name="comment" placeholder="Your comment" required></textarea>
      <button type="submit">Submit Comment</button>
    </form>
  </Container>
</Layout>